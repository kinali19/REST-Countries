{"version":3,"sources":["theme.js","global.js","components/Header.js","utils/config.js","components/CountryList.js","components/Search.js","components/Countries.js","components/BindCountryDetail.js","components/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["lightTheme","body","text","toggleBorder","gradient","element","grayText","darkTheme","GlobalStyles","createGlobalStyle","theme","Header","props","className","join","onClick","toogleTheme","apiEndpoint","CountryList","name","data","to","Card","Img","variant","alt","src","flag","Body","Title","population","toLocaleString","region","capital","Search","Row","Col","xs","xl","InputGroup","size","Text","id","FormControl","onKeyUp","onHandleSearch","placeholder","title","onChange","filterByRegion","value","regions","map","ele","index","LIMIT","Countries","validateResponse","errored","response","length","message","error","performAPICall","a","setState","loading","fetch","config","json","getCountries","countries","setList","slice","getRegions","reduce","unique","item","includes","getCountryElement","country","sm","md","loadMore","newList","newIndex","state","newShowMore","filteredbyRegion","concat","filteredbyCountry","showMore","event","target","filtered","filter","toLowerCase","indexOf","setStateforFilter","backtoDefaultState","this","document","addEventListener","trackScrolling","React","Component","BindCountryDetails","url","getCountryDetail","country_url","countryDetails","borders","getBorderCountries","bCountries","code_url","borderCountries","getCountryDetailElement","Image","ListGroup","Item","nativeName","subregion","topLevelDomain","currencies","languages","Array","prototype","call","s","toString","class","Button","country_name","prevProps","isEnter","arr","handleClick","CountryDetail","useParams","useState","prevCountry","changeCountry","prev","current","App","setTheme","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yQACaA,EAAa,CACtBC,KAAM,kBACNC,KAAM,oBACNC,aAAc,OACdC,SAAU,oCACVC,QAAS,mBACTC,SAAU,mBAGCC,EAAY,CACvBN,KAAM,qBACNC,KAAM,UACNC,aAAc,UACdC,SAAU,oCACVC,QAAS,qBACTC,SAAU,mB,QCdDE,EAAeC,YAAH,0kCASP,qBAAGC,MAAkBT,QAC1B,qBAAGS,MAAkBR,QAWhB,qBAAGQ,MAAkBL,WAC1B,qBAAGK,MAAkBR,QAIrB,qBAAGQ,MAAkBJ,YAChB,qBAAGI,MAAkBL,WAG1B,qBAAGK,MAAkBR,QAOP,qBAAGQ,MAAkBL,WACjC,qBAAGK,MAAkBR,QAIX,qBAAGQ,MAAkBL,WACjC,qBAAGK,MAAkBR,QAIrB,qBAAGQ,MAAkBJ,YAGrB,qBAAGI,MAAkBR,Q,wBCvCnBS,MATf,SAAgBC,GACZ,OACI,sBAAKC,UAAW,CAAC,SAASD,EAAMF,OAAOI,KAAK,KAA5C,UACI,qBAAKD,UAAU,QAAf,iCACA,sBAAKA,UAAU,eAAeE,QAASH,EAAMI,YAA7C,UAA0D,cAAC,IAAD,IAA1D,wB,0FCRCC,EAAc,mC,iBCIZ,SAASC,EAAYN,GAClC,IAAMO,EAAMP,EAAMQ,KAAKD,KACvB,OACE,cAAC,IAAD,CAAME,GAAE,kBAAaF,GAArB,SACA,eAACG,EAAA,EAAD,CAAMT,UAAU,eAAhB,UACE,cAACS,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAI,GAAGC,IAAKd,EAAMQ,KAAKO,OAC/C,eAACL,EAAA,EAAKM,KAAN,WACE,cAACN,EAAA,EAAKO,MAAN,CAAYhB,UAAU,UAAtB,SAAiCD,EAAMQ,KAAKD,OAC1C,qBAAIN,UAAU,2BAAd,UACE,qBAAIA,UAAU,eAAd,yBAAyC,uBAAMA,UAAU,YAAhB,cAA8BD,EAAMQ,KAAKU,WAAWC,eAAe,eAC5G,qBAAIlB,UAAU,eAAd,qBAAqC,uBAAMA,UAAU,YAAhB,cAA8BD,EAAMQ,KAAKY,aAC9E,qBAAInB,UAAU,eAAd,sBAAsC,uBAAMA,UAAU,YAAhB,cAA8BD,EAAMQ,KAAKa,yB,wCCa5EC,MAzBf,SAAgBtB,GACZ,OACI,mCACI,eAACuB,EAAA,EAAD,CAAKtB,UAAU,SAAf,UACI,cAACuB,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACI,qBAAKzB,UAAU,wBAAf,SACI,eAAC0B,EAAA,EAAD,CAAYC,KAAK,KAAK3B,UAAU,iBAAhC,UACI,cAAC0B,EAAA,EAAWE,KAAZ,CAAiB5B,UAAU,MAAM6B,GAAG,uBAApC,SAA4D,cAAC,IAAD,MAC5D,cAACC,EAAA,EAAD,CAAa,aAAW,QAAQC,QAAShC,EAAMiC,eAAgBC,YAAY,wBAAwB,mBAAiB,gCAIhI,cAACV,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGzB,UAAU,gCAA9B,SACQ,yBAAQA,UAAU,uBAAuBkC,MAAM,mBAAmBC,SAAUpC,EAAMqC,eAAlF,UACI,wBAAQC,MAAM,GAAd,8BACCtC,EAAMuC,SAAWvC,EAAMuC,QAAQC,KAAI,SAACC,EAAKC,GACtC,OAAOD,GAAO,wBAAoBH,MAAOG,EAA3B,SAAiCA,GAApBC,iBCZrDC,G,MAAQ,IAEOC,E,kDACjB,WAAY5C,GAAQ,IAAD,8BACf,cAAMA,IAYV6C,iBAAmB,SAACC,EAASC,GACzB,OAAID,IAAaC,EAASC,SAAWD,EAASE,SAC1CA,IAAQC,MACJ,oGAEG,KAGNH,EAASC,SACVC,IAAQC,MAAMH,EAASE,SAAW,mCAC3B,IAvBI,EA8BnBE,eA9BmB,sBA8BF,8BAAAC,EAAA,6DACTL,EAAW,GACXD,GAAU,EAEd,EAAKO,SAAS,CACVC,SAAS,IALA,kBASeC,MAAM,GAAD,OAAIC,EAAJ,SATpB,8BASmDC,OATnD,OASTV,EATS,yDAWTD,GAAU,EAXD,WAcb,EAAKO,SAAS,CACVC,SAAS,KAGT,EAAKT,iBAAiBC,EAASC,GAlBtB,0CAmBFA,GAnBE,0DA9BE,EA0DnBW,aA1DmB,sBA0DJ,4BAAAN,EAAA,sEACU,EAAKD,iBADf,QACPJ,EADO,UAGP,EAAKY,UAAYZ,EACjB,EAAKM,SAAS,CAAEO,QAASb,EAASc,MAAM,EAAGlB,KAC3C,EAAKmB,cALE,2CA1DI,EAmEnBA,WAAa,WACT,IAAIvB,EAAU,EAAKoB,UAAUI,QAAO,SAACC,EAAQC,GACzC,OAAOD,EAAOE,SAASD,EAAK7C,QAAU4C,EAA/B,sBAA4CA,GAA5C,CAAoDC,EAAK7C,WACjE,IACH,EAAKiC,SAAS,CAAEd,QAASA,KAvEV,EA0EnB4B,kBAAoB,SAACC,EAAS1B,GAC1B,OACI,cAAC,IAAD,CAAM2B,GAAI,GAAIC,GAAI,GAAI5C,GAAI,EAAezB,UAAU,OAAnD,SACI,cAACK,EAAD,CACIE,KAAM4D,KAFoB1B,IA5EvB,EAoFnB6B,SAAW,WACP,IAAIC,EAAU,GACRC,EAAW,EAAKC,MAAMhC,MAAQC,EAChCgC,EAAcF,EAAY,EAAKd,UAAUX,OAAS,EAElD,EAAK0B,MAAME,iBAAiB5B,OAAS,GACrCwB,EAAU,EAAKE,MAAMd,QAAQiB,OAAO,EAAKH,MAAME,iBAAiBf,MAAM,EAAKa,MAAMhC,MAAO+B,IACxFE,EAAcF,EAAY,EAAKC,MAAME,iBAAiB5B,OAAS,GAE1D,EAAK0B,MAAMI,kBAAkB9B,OAAS,GAC3CwB,EAAU,EAAKE,MAAMd,QAAQiB,OAAO,EAAKH,MAAMI,kBAAkBjB,MAAM,EAAKa,MAAMhC,MAAO+B,IACzFE,EAAcF,EAAY,EAAKC,MAAMI,kBAAkB9B,OAAS,GAGhEwB,EAAU,EAAKE,MAAMd,QAAQiB,OAAO,EAAKlB,UAAUE,MAAM,EAAKa,MAAMhC,MAAO+B,IAE/E,EAAKpB,SAAS,CACVX,MAAO+B,EACPb,QAASY,EACTO,SAAUJ,KAvGC,EA2GnB1C,eAAiB,SAAC+C,GACd,GAAIA,EAAMC,OAAO3C,MAAMU,QAAU,EAAG,CAChC,IAAMkC,EAAW,EAAKvB,UAAUwB,QAAO,SAAC1C,GACpC,GAAIA,EAAIlC,KAAK6E,cAAcC,QAAQL,EAAMC,OAAO3C,MAAM8C,gBAAkB,EACpE,OAAO3C,KAEf,EAAKY,SAAS,CAAEO,QAASsB,EAASrB,MAAM,EAAGlB,GAAQmC,kBAAmBI,IACtE,EAAKI,kBAAkBJ,QAGvB,EAAKK,sBArHM,EAyHnBlD,eAAiB,SAAC2C,GACd,GAAIA,EAAMC,OAAO3C,MAAO,CACpB,IAAM4C,EAAW,EAAKvB,UAAUwB,QAAO,SAAC1C,GACpC,GAAIA,EAAIrB,OAAOgE,cAAcC,QAAQL,EAAMC,OAAO3C,MAAM8C,gBAAkB,EACtE,OAAO3C,KAEf,EAAKY,SAAS,CAAEO,QAASsB,EAASrB,MAAM,EAAGlB,GAAQiC,iBAAkBM,IACrE,EAAKI,kBAAkBJ,QAGvB,EAAKK,sBAnIM,EAuInBD,kBAAoB,SAACJ,GACbA,EAASlC,OAASL,EAClB,EAAKU,SAAS,CAAE0B,UAAU,IAG1B,EAAK1B,SAAS,CAAE0B,UAAU,IAE1BG,EAASlC,OAAS,GAClB,EAAKK,SAAS,CAAEX,MAAOC,KA/IZ,EAmJnB4C,mBAAqB,WACjB,EAAKlC,SAAS,CACVO,QAAS,EAAKD,UAAUE,MAAM,EAAGlB,GACjCoC,UAAU,EACVrC,MAAOC,EACPiC,iBAAmB,GACnBE,kBAAoB,MAvJxB,EAAKnB,UAAY,GACjB,EAAKe,MAAQ,CACTK,UAAU,EACVnB,QAAS,GACTlB,MAAOC,EACPJ,QAAS,GACTqC,iBAAkB,GAClBE,kBAAmB,IATR,E,qDAqDnB,WACIU,KAAK9B,eACL+B,SAASC,iBAAiB,SAAUF,KAAKG,kB,oBAsG7C,WAAU,IAAD,OACL,OACI,sBAAK1F,UAAU,mBAAf,UACI,cAAC,EAAD,CAAQgC,eAAgBuD,KAAKvD,eAAgBM,QAASiD,KAAKd,MAAMnC,QAASF,eAAgBmD,KAAKnD,iBAC/F,cAAC,IAAD,UAC+B,IAA1BmD,KAAK7B,UAAUX,OACZwC,KAAKd,MAAMd,QAAQpB,KAAI,SAAC4B,EAAS1B,GAAV,OACnB,EAAKyB,kBAAkBC,EAAS1B,MAEpC8C,KAAKd,MAAMpB,QACX,qBAAKrD,UAAU,eAAf,kCAEA,qBAAKA,UAAU,eAAf,kCAGPuF,KAAKd,MAAMK,UAAY,wBAAQ9E,UAAU,YAAYE,QAASqF,KAAKjB,SAA5C,gC,GA7KDqB,IAAMC,W,kCCHxBC,E,kDACjB,WAAY9F,GAAQ,IAAD,8BACf,cAAMA,IAUV6C,iBAAmB,SAACC,EAASC,GACzB,OAAID,IAAaC,EAASC,SAAWD,EAASE,SAC1CA,IAAQC,MACJ,oGAEG,KAGNH,EAASC,SACVC,IAAQC,MAAMH,EAASE,SAAW,mCAC3B,IArBI,EA4BnBE,eA5BmB,uCA4BF,WAAO4C,GAAP,iBAAA3C,EAAA,6DACTL,EAAW,GACXD,GAAU,EAEd,EAAKO,SAAS,CACVC,SAAS,IALA,kBASeC,MAAM,GAAD,OAAIC,EAAJ,YAA0BuC,IAT9C,8BASsDtC,OATtD,OASTV,EATS,yDAWTD,GAAU,EAXD,WAcb,EAAKO,SAAS,CACVC,SAAS,KAGT,EAAKT,iBAAiBC,EAASC,GAlBtB,0CAmBFA,GAnBE,0DA5BE,wDAmDnBiD,iBAnDmB,uCAmDA,WAAOzF,GAAP,iBAAA6C,EAAA,6DACT6C,EADS,eACa1F,EADb,2BAEM,EAAK4C,eAAe8C,GAF1B,QAEXlD,EAFW,UAIX,EAAKM,SAAS,CAAE6C,eAAgBnD,EAAS,KACrCA,EAAS,GAAGoD,QAAQnD,OAAS,GAC7B,EAAKoD,sBANE,2CAnDA,wDA6DnBA,mBA7DmB,sBA6DE,gCAAAhD,EAAA,0DACb,EAAKsB,MAAMwB,eADE,uBAETG,EAAa,EAAK3B,MAAMwB,eAAeC,QAAQjG,KAAK,KAClDoG,EAHO,sBAGmBD,GAHnB,SAKQ,EAAKlD,eAAemD,GAL5B,cAKTvD,EALS,OAMb,EAAKM,SAAS,CAAEkD,gBAAiBxD,IANpB,kBAONA,GAPM,2CA7DF,EAwEnByD,wBAA0B,SAAChG,GACvB,OACI,qCACI,cAACgB,EAAA,EAAD,CAAKC,GAAI,GAAI4C,GAAI,GAAI3C,GAAI,EAAGzB,UAAU,YAAtC,SACI,cAACwG,EAAA,EAAD,CAAO3F,IAAKN,EAAKO,KAAMF,IAAI,OAE/B,eAACW,EAAA,EAAD,CAAKC,GAAI,GAAI4C,GAAI,GAAI3C,GAAI,EAAGzB,UAAU,OAAtC,UACI,oBAAIA,UAAU,UAAd,SAAyBO,EAAKD,OAC9B,cAACmG,EAAA,EAAD,CAAWzG,UAAU,wBAArB,SACI,eAACsB,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAI6C,GAAI,EAAG5C,GAAI,EAAxB,UACI,eAACgF,EAAA,EAAUC,KAAX,2BAA6B,+BAAOnG,EAAKoG,gBACzC,eAACF,EAAA,EAAUC,KAAX,0BAA4B,+BAAOnG,EAAKU,gBACxC,eAACwF,EAAA,EAAUC,KAAX,sBAAwB,+BAAOnG,EAAKY,YACpC,eAACsF,EAAA,EAAUC,KAAX,0BAA4B,+BAAOnG,EAAKqG,eACxC,eAACH,EAAA,EAAUC,KAAX,uBAAyB,+BAAOnG,EAAKa,gBACzC,eAACG,EAAA,EAAD,CAAKC,GAAI,GAAI6C,GAAI,EAAG5C,GAAI,EAAxB,UACI,eAACgF,EAAA,EAAUC,KAAX,gCAAkC,+BAAOnG,EAAKsG,oBAC9C,eAACJ,EAAA,EAAUC,KAAX,0BAA4B,+BAAOnG,EAAKuG,YAAcvG,EAAKuG,WAAW,GAAGxG,UACzE,eAACmG,EAAA,EAAUC,KAAX,yBAA2B,+BAAOnG,EAAKwG,WAAaC,MAAMC,UAAU1E,IAAI2E,KAAK3G,EAAKwG,WAAW,SAAAI,GAAC,OAAIA,EAAE7G,QAAM8G,wBAGrH,EAAK3C,MAAM6B,gBAAgBvD,OAAS,EACjC,sBAAK/C,UAAU,wCAAf,qBACI,qBAAKqH,MAAM,mBAAX,SACK,EAAK5C,MAAM6B,gBAAgB/D,KAAI,SAAC4B,EAAS1B,GACtC,OACI,cAAC,IAAD,CAAMjC,GAAE,kBAAa2D,EAAQ7D,MAA7B,SACI,cAACgH,EAAA,EAAD,CAAQtH,UAAU,uBAAlB,SAA0CmE,EAAQ7D,QADZmC,WAQxD,UAzGlB,EAAKgC,MAAQ,CACT8C,aAAcxH,EAAMO,KACpB+C,SAAS,EACTR,SAAS,EACToD,eAAgB,KAChBK,gBAAiB,IAPN,E,qDAiHnB,WACIf,KAAKQ,iBAAiBR,KAAKd,MAAM8C,gB,gCAGrC,SAAmBC,GACf,IAAIC,GAAU,EACd,GAAID,EAAUlH,OAASiF,KAAKxF,MAAMO,OAASmH,EAAS,CAChDA,GAAU,EACVlC,KAAKQ,iBAAiBR,KAAKxF,MAAMO,MACjC,IAAIoH,EAAM,CAAC,CAAC,KAAQF,EAAUlH,KAAM,QAAWiF,KAAKxF,MAAMO,OAC1DiF,KAAKxF,MAAM4H,YAAYD,M,oBAI/B,WACI,IAAInH,EAAOgF,KAAKd,MAAMwB,eACtB,OACI,cAAC3E,EAAA,EAAD,UAEKiE,KAAKd,MAAMwB,eACR,mCACKV,KAAKgB,wBAAwBhG,KAElCgF,KAAKd,MAAMpB,QACX,qBAAKrD,UAAU,eAAf,gCAEA,qBAAKA,UAAU,eAAf,yC,GA5I4B2F,IAAMC,WCGvC,SAASgC,IACpB,IAAQtH,EAASuH,cAATvH,KACR,EAAqCwH,mBAAS,KAA9C,mBAAOC,EAAP,KAAoBC,EAApB,KASA,OACI,sBAAKhI,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMQ,GAAIuH,EAAV,SAAuB,eAACT,EAAA,EAAD,CAAQtH,UAAU,mBAAlB,UAAqC,cAAC,IAAD,IAArC,iBACvB,cAAC,EAAD,CAAoBM,KAAMA,EAAMqH,YAVrB,SAACD,GACbA,GAAOA,EAAI,GAAGO,MACbD,EAAc,WAAD,OAAYN,EAAI,GAAGO,OACjCF,EAAY3C,QAAQsC,EAAI,GAAGQ,UAAY,GACtCF,EAAc,WCuCXG,MA1Cf,WACE,MAA0BL,mBAAS,SAAnC,mBAAOjI,EAAP,KAAcuI,EAAd,KAYA,OAgBE,aAfA,CAeC,IAAD,UACE,eAAC,IAAD,CAAevI,MAAiB,UAAVA,EAAoBV,EAAaO,EAAvD,UACE,cAACC,EAAD,IACA,cAAC,EAAD,CAAQQ,YA7BM,WAGhBiI,EADY,UAAVvI,EACO,OAGA,UAuB2BA,MAAOA,IACzC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwI,KAAK,IAAI7I,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAO6I,KAAK,gBAAgB7I,QAAS,cAACoI,EAAD,eCrChCU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzD,SAAS0D,eAAe,SAM1BZ,K","file":"static/js/main.d4976266.chunk.js","sourcesContent":["// theme.js\nexport const lightTheme = {\n    body: 'hsl(0, 0%, 98%)',\n    text: 'hsl(200, 15%, 8%)',\n    toggleBorder: '#FFF',\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\n    element: 'hsl(0, 0%, 100%)',\n    grayText: 'hsl(0, 0%, 52%)'\n  }\n  \n  export const darkTheme = {\n    body: 'hsl(207, 26%, 17%)',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    gradient: 'linear-gradient(#091236, #1E215D)',\n    element: 'hsl(209, 23%, 22%)',\n    grayText: 'hsl(0, 0%, 52%)'\n  }\n  ","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  body {\n    align-items: center;\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    // display: flex;\n    // flex-direction: column;\n    // justify-content: center;\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    font-family: Nunito Sans;\n    transition: all 0.25s linear;\n  }\n  .card,.card-body{\n    background: ${({ theme }) => theme.element};\n    color: ${({ theme }) => theme.text};\n  }\n  .input-group-text , .form-control{\n    border:none;\n    color: ${({ theme }) => theme.grayText};\n    background: ${({ theme }) => theme.element};\n  }\n  .form-control::placeholder{\n    color: ${({ theme }) => theme.text};\n  }\n  .lightGray{\n    color: hsl(0, 0%, 52%);\n    font-weight: 700;\n  }\n  select, .dropdown option, .dropdown option:hover,.dropdown option:active{\n      background-color:  ${({ theme }) => theme.element} !important;\n      color: ${({ theme }) => theme.text} !important;\n      border: none;\n  }\n  .detail-view button{\n    background-color:  ${({ theme }) => theme.element} !important;\n    color: ${({ theme }) => theme.text} !important;\n    border: none;\n  }\n  .list-group-item span{\n    color: ${({ theme }) => theme.grayText} !important;\n  }\n  .list-group-item, .detail-view h4{\n    color: ${({ theme }) => theme.text} !important;\n  }\n  `\n","import '../styles/Header.css'\nimport { FaMoon } from 'react-icons/fa';\n\n\nfunction Header(props) {\n    return (\n        <div className={[\"navbar\",props.theme].join(' ')}>\n            <div className=\"title\">Where in the World?</div>\n            <div className=\"theme-button\" onClick={props.toogleTheme}><FaMoon/>&nbsp; Dark mode</div>\n        </div>\n    )\n}\n\nexport default Header","export const apiEndpoint = 'https://restcountries.eu/rest/v2'\n\n// export default async function getApiResponse(url, method,headers,body)  {\n//     let response =  await (\n//           await fetch(url, {\n//             method: method,\n//             headers: headers,\n//             body: body,\n//           })\n//         ).json();\n  \n//         return response;\n//   }","import React from \"react\";\nimport { Card } from \"react-bootstrap\"\nimport {Link} from \"react-router-dom\"\n\nexport default function CountryList(props) {\n  const name= props.data.name;\n  return (\n    <Link to={`/detail/${name}`}>\n    <Card className=\"me-0 me-md-5\">\n      <Card.Img variant=\"top\" alt=\"\" src={props.data.flag} />\n      <Card.Body>\n        <Card.Title className=\"fw-bold\">{props.data.name}</Card.Title>\n          <ul className=\" mt-4 mb-4 list-unstyled\">\n            <li className=\"border-0 p-0\"> Population:<span className=\"lightGray\"> {props.data.population.toLocaleString(\"en-US\")}</span></li>\n            <li className=\"border-0 p-0\">Region: <span className=\"lightGray\"> {props.data.region}</span></li>\n            <li className=\"border-0 p-0\">Capital: <span className=\"lightGray\"> {props.data.capital}</span></li>\n          </ul>\n      </Card.Body>\n    </Card>\n    </Link>\n  )\n}\n","import { InputGroup, FormControl, Row, Col } from 'react-bootstrap'\nimport { FaSearch } from 'react-icons/fa';\n\nfunction Search(props) {\n    return (\n        <>\n            <Row className=\"d-flex\">\n                <Col xs={12} xl={4}>\n                    <div className=\"pb-5 search-container\">\n                        <InputGroup size=\"lg\" className=\"shadow rounded\">\n                            <InputGroup.Text className=\"p-4\" id=\"inputGroup-sizing-lg\" ><FaSearch /></InputGroup.Text>\n                            <FormControl aria-label=\"Large\" onKeyUp={props.onHandleSearch} placeholder=\"Search for Country...\" aria-describedby=\"inputGroup-sizing-sm\" />\n                        </InputGroup>\n                    </div>\n                </Col>\n                <Col xs={12} xl={8} className=\"d-flex justify-content-xl-end\">\n                        <select className=\"dropdown shadow mb-5\" title=\"Filter by Region\" onChange={props.filterByRegion} >\n                            <option value=\"\">Filter by Region</option>\n                            {props.regions && props.regions.map((ele, index) => {\n                                return ele && <option key={index} value={ele}>{ele}</option>\n                            })}\n                        </select>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Search","import React from \"react\";\nimport { message, Row, Col } from \"antd\";\nimport * as config from '../utils/config'\nimport CountryList from './CountryList'\nimport Search from \"./Search\";\nimport '../styles/Country.css'\n\nconst LIMIT = 10;\n\nexport default class Countries extends React.Component {\n    constructor(props) {\n        super(props)\n        this.countries = []\n        this.state = {\n            showMore: true,\n            setList: [],\n            index: LIMIT,\n            regions: [],\n            filteredbyRegion: [],\n            filteredbyCountry: []\n        }\n    }\n\n    validateResponse = (errored, response) => {\n        if (errored || (!response.length && !response.message)) {\n            message.error(\n                \"Could not fetch countries. Check that the backend is running, reachable and returns valid JSON.\"\n            );\n            return false;\n        }\n\n        if (!response.length) {\n            message.error(response.message || \"No countries found in database\");\n            return false;\n        }\n\n        return true;\n    };\n\n    //get all countries using api\n    performAPICall = async () => {\n        let response = {};\n        let errored = false;\n\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            response = await (await fetch(`${config.apiEndpoint}/all`)).json();\n        } catch (e) {\n            errored = true;\n        }\n\n        this.setState({\n            loading: false,\n        });\n\n        if (this.validateResponse(errored, response)) {\n            return response;\n        }\n    };\n\n    componentDidMount() {\n        this.getCountries()\n        document.addEventListener('scroll', this.trackScrolling);\n    }\n\n    getCountries = async () => {\n        let response = await this.performAPICall()\n        if (response) {\n            this.countries = response\n            this.setState({ setList: response.slice(0, LIMIT) })\n            this.getRegions()\n        }\n    }\n\n    getRegions = () => {\n        let regions = this.countries.reduce((unique, item) => {\n            return unique.includes(item.region) ? unique : [...unique, item.region];\n        }, []);\n        this.setState({ regions: regions })\n    }\n\n    getCountryElement = (country, index) => {\n        return (\n            <Col  sm={24} md={12} xl={6} key={index} className=\"mb-5\">\n                <CountryList\n                    data={country}\n                />\n            </Col>\n        );\n    };\n\n    loadMore = () => {\n        let newList = []\n        const newIndex = this.state.index + LIMIT;\n        let newShowMore = newIndex < (this.countries.length - 1);\n\n        if (this.state.filteredbyRegion.length > 0) {\n            newList = this.state.setList.concat(this.state.filteredbyRegion.slice(this.state.index, newIndex));\n            newShowMore = newIndex < (this.state.filteredbyRegion.length - 1);\n        }\n        else if (this.state.filteredbyCountry.length > 0) {\n            newList = this.state.setList.concat(this.state.filteredbyCountry.slice(this.state.index, newIndex));\n            newShowMore = newIndex < (this.state.filteredbyCountry.length - 1);\n        }\n        else\n            newList = this.state.setList.concat(this.countries.slice(this.state.index, newIndex));\n\n        this.setState({\n            index: newIndex,\n            setList: newList,\n            showMore: newShowMore\n        })\n    }\n\n    onHandleSearch = (event) => {\n        if (event.target.value.length >= 3) {\n            const filtered = this.countries.filter((ele) => {\n                if (ele.name.toLowerCase().indexOf(event.target.value.toLowerCase()) > -1)\n                    return ele\n            })\n            this.setState({ setList: filtered.slice(0, LIMIT), filteredbyCountry: filtered })\n            this.setStateforFilter(filtered)\n        }\n        else {\n            this.backtoDefaultState()\n        }\n    }\n\n    filterByRegion = (event) => {\n        if (event.target.value) {\n            const filtered = this.countries.filter((ele) => {\n                if (ele.region.toLowerCase().indexOf(event.target.value.toLowerCase()) > -1)\n                    return ele\n            })\n            this.setState({ setList: filtered.slice(0, LIMIT), filteredbyRegion: filtered })\n            this.setStateforFilter(filtered)\n        }\n        else {\n            this.backtoDefaultState()\n        }\n    }\n\n    setStateforFilter = (filtered) => {\n        if (filtered.length > LIMIT) {\n            this.setState({ showMore: true })\n        }\n        else\n            this.setState({ showMore: false })\n\n        if (filtered.length > 0) {\n            this.setState({ index: LIMIT })\n        }\n    }\n\n    backtoDefaultState = () => {\n        this.setState({ \n            setList: this.countries.slice(0, LIMIT),\n            showMore: true,\n            index: LIMIT,\n            filteredbyRegion : [],\n            filteredbyCountry : []\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"country-home p-5\">\n                <Search onHandleSearch={this.onHandleSearch} regions={this.state.regions} filterByRegion={this.filterByRegion} />\n                <Row>\n                    {this.countries.length !== 0 ? (\n                        this.state.setList.map((country, index) =>\n                            this.getCountryElement(country, index)\n                        )\n                    ) : this.state.loading ? (\n                        <div className=\"loading-text\">Loading countries...</div>\n                    ) : (\n                        <div className=\"loading-text\">No Country to list</div>\n                    )}\n                </Row>\n                {this.state.showMore && <button className=\" loadMore\" onClick={this.loadMore}> Load More </button>}\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport { message } from 'antd';\nimport * as config from '../utils/config'\nimport { Row, Col, Image, ListGroup, Button } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\n\nexport default class BindCountryDetails extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            country_name: props.name,\n            loading: false,\n            errored: false,\n            countryDetails: null,\n            borderCountries: [],\n        }\n    }\n\n    validateResponse = (errored, response) => {\n        if (errored || (!response.length && !response.message)) {\n            message.error(\n                \"Could not fetch countries. Check that the backend is running, reachable and returns valid JSON.\"\n            );\n            return false;\n        }\n\n        if (!response.length) {\n            message.error(response.message || \"No countries found in database\");\n            return false;\n        }\n\n        return true;\n    };\n\n    //get country by name using api\n    performAPICall = async (url) => {\n        let response = {};\n        let errored = false;\n\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            response = await (await fetch(`${config.apiEndpoint}/${url}`)).json();\n        } catch (e) {\n            errored = true;\n        }\n\n        this.setState({\n            loading: false,\n        });\n\n        if (this.validateResponse(errored, response)) {\n            return response;\n        }\n    };\n\n    getCountryDetail = async (name) => {\n        const country_url = `name/${name}?fullText=true`\n        let response = await this.performAPICall(country_url)\n        if (response) {\n            this.setState({ countryDetails: response[0] })\n            if (response[0].borders.length > 0)\n                this.getBorderCountries()\n        }\n    }\n\n    getBorderCountries = async () => {\n        if (this.state.countryDetails) {\n            let bCountries = this.state.countryDetails.borders.join(';');\n            const code_url = `alpha?codes=${bCountries}`\n\n            let response = await this.performAPICall(code_url)\n            this.setState({ borderCountries: response })\n            return response\n        }\n    }\n\n    getCountryDetailElement = (data) => {\n        return (\n            <>\n                <Col xs={24} sm={12} xl={6} className=\"mb-5 me-5\">\n                    <Image src={data.flag} alt=\"\" />\n                </Col>\n                <Col xs={24} sm={12} xl={5} className=\"mb-5\">\n                    <h4 className=\"fw-bold\">{data.name}</h4>\n                    <ListGroup className=\"my-5 d-flex flex-wrap\" >\n                        <Row>\n                            <Col xs={24} md={6} xl={6}>\n                                <ListGroup.Item>Native Name: <span>{data.nativeName}</span></ListGroup.Item>\n                                <ListGroup.Item>Population: <span>{data.population}</span></ListGroup.Item>\n                                <ListGroup.Item>Region: <span>{data.region}</span></ListGroup.Item>\n                                <ListGroup.Item>Sub Region: <span>{data.subregion}</span></ListGroup.Item>\n                                <ListGroup.Item>Capital: <span>{data.capital}</span></ListGroup.Item></Col>\n                            <Col xs={24} md={6} xl={6}>\n                                <ListGroup.Item>Top Level Domain: <span>{data.topLevelDomain}</span></ListGroup.Item>\n                                <ListGroup.Item>Currencies: <span>{data.currencies && data.currencies[0].name}</span></ListGroup.Item>\n                                <ListGroup.Item>Languages: <span>{data.languages && Array.prototype.map.call(data.languages, s => s.name).toString()}</span></ListGroup.Item></Col>\n                        </Row>\n                    </ListGroup>\n                    {this.state.borderCountries.length > 0 ?\n                        <div className=\"d-md-flex  align-items-center fw-bold\">Borders:\n                            <div class=\"flex-wrap d-flex\">\n                                {this.state.borderCountries.map((country, index) => {\n                                    return (\n                                        <Link to={`/detail/${country.name}`} key={index}>\n                                            <Button className=\"mt-4 ms-4 p-2 p-md-3\">{country.name}</Button>\n                                        </Link>\n                                    )\n                                }\n                                )}\n                            </div>\n                        </div>\n                        : ''}\n                </Col>\n            </>\n        )\n    }\n\n    componentDidMount() {\n        this.getCountryDetail(this.state.country_name)\n    }\n\n    componentDidUpdate(prevProps) {\n        let isEnter = false;\n        if (prevProps.name !== this.props.name && !isEnter) {\n            isEnter = true;\n            this.getCountryDetail(this.props.name)\n            let arr = [{'prev': prevProps.name, 'current': this.props.name}]\n            this.props.handleClick(arr)\n        }\n    }\n\n    render() {\n        let data = this.state.countryDetails\n        return (\n            <Row>\n\n                {this.state.countryDetails ? (\n                    <>\n                        {this.getCountryDetailElement(data)}\n                    </>\n                ) : this.state.loading ? (\n                    <div className=\"loading-text\">Loading country...</div>\n                ) : (\n                    <div className=\"loading-text\">Not found any record!</div>\n                )}\n            </Row>\n        )\n    }\n}","import {useState} from 'react'\nimport {\n    useParams, Link\n} from 'react-router-dom';\nimport {Button} from 'react-bootstrap'\nimport {FaArrowLeft} from 'react-icons/fa';\nimport '../styles/Country.css'\nimport BindCountryDetails from './BindCountryDetail';\n\nexport default function CountryDetail() {\n    const { name } = useParams();\n    const [prevCountry, changeCountry] = useState(\"/\")\n\n   const handleClick = (arr) => {\n        if(arr && arr[0].prev)\n            changeCountry(`/detail/${arr[0].prev}`)\n        if(prevCountry.indexOf(arr[0].current) > -1)  \n            changeCountry(`/`)  \n   }\n\n    return (\n        <div className=\"detail-view p-5\">\n            <Link to={prevCountry}><Button className=\"shadow mt-3 mb-5\"><FaArrowLeft />&nbsp; Back</Button></Link>\n            <BindCountryDetails name={name} handleClick={handleClick}/>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport './App.css';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\nimport Header from './components/Header';\nimport Countries from './components/Countries';\nimport CountryDetail from './components/Detail'\nimport {\n  BrowserRouter, Routes, Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    // if the theme is not light, then set it to dark\n    if (theme === 'light') {\n      setTheme('dark');\n      // otherwise, it should be light\n    } else {\n      setTheme('light');\n    }\n  }\n\n  return (\n    // <BrowserRouter>\n    //   <Routes>\n    //     <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n    //       <>\n    //         <GlobalStyles />\n    //         <Header toogleTheme={toggleTheme} theme={theme} />\n    //         <Route path=\"/\" element={<Countries />} />\n    //         {/* <Route path=\"/detail/:countryname\" element={<Detail />} /> */}\n\n    //       </>\n    //     </ThemeProvider>\n    //  </Routes>\n    // </BrowserRouter>\n\n\n    <BrowserRouter>\n      <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n        <GlobalStyles />\n        <Header toogleTheme={toggleTheme} theme={theme} />\n        <Routes>\n          <Route path=\"/\" element={<Countries />} />\n          <Route path=\"/detail/:name\" element={<CountryDetail />} />\n        </Routes>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}